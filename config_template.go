package main

import (
	"fmt"
	"os"
	"strings"
)

type ConfigTemplate struct {
	Path    string
	Content []byte
}

func (cfg *ConfigTemplate) WriteFile() error {
	if err := os.WriteFile(cfg.Path, cfg.Content, 0666); err != nil {
		return fmt.Errorf("Error writing to config at %s: %s", shrinkHome(cfg.Path), err.Error())
	}
	return nil
}

func NewConfigTemplate(path string) *ConfigTemplate {
	var content strings.Builder
	content.WriteString(`# yaml-language-server: $schema=./schema.json
# vim:fileencoding=utf-8:foldmethod=marker
#: AUTOGENERATED TBG CONFIG

#: paths (REQUIRED) {{{
#: list of directories that contain images
#: background image

paths:
- path: ~/Pictures

#: - path: a directory that contain images to choose from when changing background image
#:   alignment: (optional) image alignment in Windows Terminal
#:              valid values: topLeft, top, topRight, left, center, right, bottomLeft, bottom, bottomRight
#:              default: center

#:   opacity:   (optional) image opacity of background images in Windows Terminal
#:              valid values: 0.0 - 1.0 (inclusive)
#:              default: 1.0

#:   stretch:   (optional) image stretch in Windows Terminal
#:              valid values: fill, none, uniform, uniformToFill
#:              default: uniformToFill
#: }}}

#: port {{{
#: port used by tbg server to send POST requests to, to trigger tbg actions such
#: as change image and quit server
#: default: 9545

# port: 9545

#: }}}

#: profile {{{
#: profile in Windows Terminal. It can be referenced thru index (starting at 1)
#: or by profile name (e.g. "pwsh")
#: default: default

# profile: default

#: }}}

#: interval {{{
#: time in minutes between each image change
#: default: 30

# interval: 30

#: }}} `)

	return &ConfigTemplate{
		Path:    path,
		Content: []byte(content.String()),
	}
}
